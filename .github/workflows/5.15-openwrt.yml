name: Build 5.15-OpenWrt

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: "SSH connection to Actions"
        required: false
        default: "false"
  schedule:
    - cron: 0 19 * * *
  watch:
    types: [started]

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: 5.15.config
  DIY_P1_SH: 5.15-part1.sh
  DIY_P2_SH: 5.15-part2.sh
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: 检查项目分支
        uses: actions/checkout@v4

      - name: 安装编译环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi $(docker images -q) || true
          sudo apt update
          sudo apt -y install --no-install-recommends \
            build-essential clang cmake ccache flex gawk gcc-multilib g++-multilib \
            gettext git libncurses5-dev libssl-dev python3 python3-pyelftools rsync \
            unzip wget zlib1g-dev
          sudo timedatectl set-timezone "Asia/Shanghai"
          sudo mkdir -p /workdir && sudo chown $USER:$GROUPS /workdir

      - name: 下载固件源码
        working-directory: /workdir
        run: |
          git clone --depth=1 $REPO_URL -b $REPO_BRANCH openwrt
          ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

      - name: 清理旧的构建目录
        run: rm -rf openwrt/{staging_dir,build_dir,tmp}

      - name: 加载自定义设置
        run: |
          [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
          chmod +x $DIY_P1_SH
          cd openwrt && $GITHUB_WORKSPACE/$DIY_P1_SH

      - name: 下载和安装插件
        run: |
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 更改设置
        run: |
          [ -e files ] && mv files openwrt/files
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
          chmod +x $DIY_P2_SH
          cd openwrt && $GITHUB_WORKSPACE/$DIY_P2_SH

      - name: SSH链接管理
        uses: P3TERX/ssh2actions@v1.0.0
        if: github.event.inputs.ssh == 'true'
        env:
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

      - name: 下载安装包
        run: |
          cd openwrt
          make defconfig
          make download -j$(nproc)
          find dl -size -1024c -delete

      - name: 获取内核版本号
        run: |
          KERNEL_VERSION=$(grep 'LINUX_VERSION-5.15' openwrt/include/kernel-5.15 | cut -d' ' -f3)
          echo "KERNEL_VERSION_5_15=${KERNEL_VERSION}" >> $GITHUB_ENV

      - name: 开始编译固件
        id: compile
        run: |
          cd openwrt
          echo "$(nproc) threads compiling..."
          make -j$(nproc) || make -j1 V=s
          echo "BUILD_SUCCESS=true" >> $GITHUB_ENV

      - name: 磁盘使用情况
        if: success()
        run: df -hT

      - name: 上传bin目录
        uses: actions/upload-artifact@v4
        if: env.BUILD_SUCCESS == 'true' && env.UPLOAD_BIN_DIR == 'true'
        with:
          name: OpenWrt_bin_${{ env.FILE_DATE }}
          path: openwrt/bin

      - name: 整理固件
        id: organize
        if: env.UPLOAD_FIRMWARE == 'true'
        run: |
          FIRMWARE_DIR=$(find openwrt/bin/targets -type d -name "*")
          rm -rf $FIRMWARE_DIR/packages
          echo "FIRMWARE=$FIRMWARE_DIR" >> $GITHUB_ENV

      - name: 上传固件到 GitHub
        uses: actions/upload-artifact@v4
        if: steps.organize.outputs.status == 'success'
        with:
          name: OpenWrt-5.15${{ env.FILE_DATE }}
          path: ${{ env.FIRMWARE }}

      - name: 创建 Release 标签
        id: tag
        if: env.UPLOAD_RELEASE == 'true'
        run: |
          RELEASE_TAG=$(date +"%Y.%m.%d-%H%M")
          echo "RELEASE_TAG=${RELEASE_TAG}" >> $GITHUB_ENV
          echo "Built on ${{ env.FILE_DATE }}" > release.txt

      - name: 发布至 Release
        uses: softprops/action-gh-release@v1
        if: steps.tag.outputs.status == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: OpenWrt 5.15${{ env.KERNEL_VERSION_5_15 }}_${{ env.FILE_DATE }}
          tag_name: ${{ env.RELEASE_TAG }}
          body_path: release.txt
          files: ${{ env.FIRMWARE }}/*

      - name: 清理旧的运行
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 3

      - name: 删除旧 Releases
        uses: dev-drprasad/delete-older-releases@master
        if: env.UPLOAD_RELEASE == 'true'
        with:
          keep_latest: 30
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build 5.4-OpenWrt

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: "SSH connection to Actions"
        required: false
        default: "false"
  schedule:
    - cron: 0 19 * * *
  watch:
    types: [started]

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: 5.4.config
  DIY_P1_SH: 5.4-part1.sh
  DIY_P2_SH: 5.4-part2.sh
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: true
  UPLOAD_WETRANSFER: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - name: 检查项目分支
        uses: actions/checkout@main

      - name: 设置缓存路径
        id: cache-setup
        run: |
          echo "CACHE_DIR=/workdir/cache" >> $GITHUB_ENV

      - name: 恢复缓存
        uses: actions/cache@v3
        with:
          path: /workdir/cache
          key: ${{ runner.os }}-lede-cache-${{ hashFiles('**/feeds.conf.default', '**/.config') }}
          restore-keys: |
            ${{ runner.os }}-lede-cache-

      - name: 安装编译环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo bash -c 'cat > /etc/apt/sources.list << EOF
          deb http://archive.ubuntu.com/ubuntu jammy main universe multiverse restricted
          deb http://archive.ubuntu.com/ubuntu jammy-updates main universe multiverse restricted
          deb http://archive.ubuntu.com/ubuntu jammy-security main universe multiverse restricted
          EOF'
          sudo apt-get update
          sudo apt-get install -y build-essential gcc g++ gettext-base \
            ccache cmake device-tree-compiler binutils bison flex zlib1g-dev \
            libssl-dev libtool libc6-i386 libc6-dev-i386
          sudo apt-get autoremove -y
          sudo apt-get clean

      - name: 下载固件源码
        working-directory: /workdir
        run: |
          git clone $REPO_URL -b $REPO_BRANCH openwrt
          ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

      - name: 清理旧的构建目录
        run: |
          rm -rf openwrt/staging_dir openwrt/build_dir

      - name: 加载自定义设置
        run: |
          [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
          chmod +x $DIY_P1_SH
          cd openwrt
          $GITHUB_WORKSPACE/$DIY_P1_SH

      - name: 下载插件
        run: cd openwrt && ./scripts/feeds update -a

      - name: 读取插件
        run: cd openwrt && ./scripts/feeds install -a

      - name: 更改设置
        run: |
          [ -e files ] && mv files openwrt/files
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
          chmod +x $DIY_P2_SH
          cd openwrt
          $GITHUB_WORKSPACE/$DIY_P2_SH

      - name: 编译固件
        id: compile
        run: |
          cd openwrt
          make defconfig
          make download -j$(nproc)
          make -j$(nproc) || make -j1 V=s

      - name: 保存缓存
        uses: actions/cache@v3
        with:
          path: /workdir/cache
          key: ${{ runner.os }}-lede-cache-${{ hashFiles('**/feeds.conf.default', '**/.config') }}
          restore-keys: |
            ${{ runner.os }}-lede-cache-

      - name: 查看磁盘使用情况
        if: (!cancelled())
        run: df -hT

      - name: 上传bin压缩目录
        uses: actions/upload-artifact@main
        if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
        with:
          name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
          path: openwrt/bin

      - name: 整理编译好的固件
        id: organize
        if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
        run: |
          cd openwrt/bin/targets/*/*
          rm -rf packages
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          echo "::set-output name=status::success"

      - name: 上传固件到github
        uses: actions/upload-artifact@main
        if: steps.organize.outputs.status == 'success' && !cancelled()
        with:
          name: OpenWrt-5.4${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
          path: ${{ env.FIRMWARE }}

      - name: 创建release标签
        id: tag
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        run: |
          echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
          echo "::set-output name=status::success"

      - name: 发布至release
        uses: softprops/action-gh-release@v1
        if: steps.tag.outputs.status == 'success' && !cancelled()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: OpenWrt 5.4${{ env.KERNEL_VERSION_5_4 }}-X86-64_${{ env.FILE_DATE }}
          tag_name: ${{ steps.tag.outputs.release_tag }}
          body_path: release.txt
          files: ${{ env.FIRMWARE }}/*

      - name: 删除工作流运行
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 3

      - name: 删除旧的Releases
        uses: dev-drprasad/delete-older-releases@master
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        with:
          keep_latest: 30
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{  secrets.GITHUB_TOKEN }}
